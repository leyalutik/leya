Таблица истинности

1.Инструменты важные для программиста  - 1.Моделировать идеи в блок-схемах и всевдокоде. 2.отличать правлиьное от неправильного при помощи логики 3. выполнять расчеты 4. уверенно вычислять вероятности.

2.Модель - набор идей, которые описывают задачу и её свойства. 

3.Математическая модель - *Модель*, которая сводится к Числовому(-ым) Выражению(-ям) (основанному(-ым) на переменных и операторах ( '+' , '-' , ':' , '*' ...). 

4.Логическая модель - *Модель*, которая сводится к Логическому(-им) Выражению(-ям) (основанному(-ым) на логических переменных и логических операторах).
Логические переменные (и выражения) могут иметь только 2 значения: 'Истина' и  'Ложь'.

Пример

*Логические операторы* 
	AND (логический оператор И)
		A AND B - истинно  <-->  A истинно и В истинно
	OR (логический оператор ИЛИ)
		A OR B - истинно  <--> A истинно или В истинно
	XOR (логический Исключающий оператор ИЛИ)
		A XOR B - истинно <--> (A истинно и В ложно) или (A ложно и B истинно)
	"!" (Логическое НЕ): 		" ! "
		!A - истинно <--> A ложно
	"-->" (Логическое ЕСЛИ) :
		
*Зависимости утверждений*:
	"-->" Логическое *Следование* утверждений(А условие, В следствие)
		A --> B - истинно <--> !A OR B - истинно
			Если А, то В (Если вода тёплая, я плаваю)	
	"<-->" *Двусторонняя Условная Зависимость* утверждений: 	
		(A <--> B): В истинно тогда и только тогда, когда истинно А.
			!AAND!B OR AANDB <--> !(A XOR B)
	!() ? () *Протипопоставление* утверждений: 
		Каждое условное выражение имеет "Противопоставленный" ему эквивалент.
		(A --> B) <--> (!B --> !A)	
		Внимательно:
			1.При утверждении  А -> B нужно внимательно обозначить !A и !B, так 						чтобы (!B -> !A). 
				Не всегда !A(=!(Вода Теплая)) равно Вода Холодная. 
				(Пример: 
					A(=Вода теплая) -> B(=Я плаваю) 
					И 
					D(=Вода холодная) -> B(=Я плаваю), 
				здесь !A - будет (Нет воды, или Ледяная или Горячая Вода 							или еще как-то).
			2.В следует из A (A --> B) не значит, что А следует из B (B --> A)
				Пример: C --> B <--> В -> C, С - вода теплая или горячая.
			                  		A --> B не следует B --> A, A - вода теплая.
5.Булева алгебра - правила вычислений(преобразований) логических выражений (логической модели).

6.Правила Булевой алгебры - 
	*Ассоциативность* - Для последовательностей, состоящих только из операций OR илиAND, 		круглые скобки не имеют значения. 
		A AND ( B AND C) = (A AND B) AND C
		A OR (B OR C) = (A OR B) OR C
	*Дистрибутивность* - Правила раскрытия скобок при логических операторах AND и OR.
		A AND (B OR C) = (A AND B) OR (A AND C)  (A * (B + C)) = (A*B) + (A*C)
		A OR (B AND C) = (A OR B) AND (A OR C)     (A + (B*C)) = (A+B) * (A+C)
	*Правидо де Моргана* - Правило преобразования выражение через оператор НЕ
		!(A AND B) = !A OR !B
		!(A OR B) = !A AND !B
6.*Таблица истинности* - еще один способ  анализа логической модели. 
	Берем таблицу, где каждой переменной модели соответсвует свой столбец со значениями 		Истина-Ложь, 
		а строки - всевозможные комбинации состояний переменных. 
	И мы считаем результат каждой комбинации переменных и анализируем 		совокупность результатов.
7. Логическая загадка "Кто держит зебру" - 
	На улице стоят пять домов.
	Англичанин живёт в красном доме.
	У испанца есть собака.
	В зелёном доме пьют кофе.
	Украинец пьёт чай.
	Зелёный дом стоит сразу справа от белого дома.
	Тот, кто курит Old Gold, разводит улиток.
	В жёлтом доме курят Kool.
	В центральном доме пьют молоко.
	Норвежец живёт в первом доме.
	Сосед того, кто курит Chesterfield, держит лису.
	В доме по соседству с тем, в котором держат лошадь, курят Kool.
	Тот, кто курит Lucky Strike, пьёт апельсиновый сок.
	Японец курит Parliament.
	Норвежец живёт рядом с синим домом.
	Кто пьёт воду? Кто держит зебру?

	В целях ясности следует добавить, что каждый из пяти домов окрашен в свой цвет, а их 	жители — разных национальностей, владеют разными животными, пьют разные напитки и 	курят разные марки американских сигарет. Ещё одно замечание: в утверждении 6 справа 	означает справа относительно вас.

Логические вентили - базовый элемент цифровой микросхемы,  в которых выполняются логические 		         	операции с электрическим током.
		   	Логические вентиль получает значения через входные контакты (True 			или False (электрические сигналы высокого или низкого 						напряжения) передаёт результат на выходной контакт. 
			Логические вентили бывают AND, OR, XOR и т.д.
		   